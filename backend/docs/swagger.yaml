definitions:
  models.AccountResponse:
    properties:
      balance:
        type: number
      created_at:
        type: string
      currency:
        type: string
      id:
        type: integer
      name:
        type: string
      provider:
        type: string
      type:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.AccountTypeResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.CommentRequest:
    properties:
      body:
        type: string
      created_at:
        type: string
      expense_id:
        type: integer
      user_id:
        type: integer
    type: object
  models.CommentResponse:
    properties:
      body:
        type: string
      created_at:
        type: string
      expense:
        $ref: '#/definitions/models.UserResponse'
      expense_id:
        type: integer
      id:
        type: integer
      user:
        $ref: '#/definitions/models.UserResponse'
      user_id:
        type: integer
    type: object
  models.CreateAccountRequest:
    properties:
      balance:
        type: number
      currency:
        type: string
      name:
        type: string
      provider:
        type: string
      type:
        type: string
    required:
    - name
    - type
    type: object
  models.ExpenseRequest:
    properties:
      created_by:
        type: integer
      currency:
        type: string
      date:
        type: string
      description:
        type: string
      group_id:
        type: integer
      id:
        type: integer
      is_recurring:
        type: boolean
      total_amount:
        type: number
    type: object
  models.ExpenseResponse:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      currency:
        type: string
      date:
        type: string
      description:
        type: string
      group:
        $ref: '#/definitions/models.GroupResponse'
      group_id:
        type: integer
      id:
        type: integer
      is_recurring:
        type: boolean
      total_amount:
        type: number
      user:
        $ref: '#/definitions/models.UserResponse'
    type: object
  models.GroupMemberRequest:
    properties:
      group_id:
        type: integer
      role:
        type: string
      user_id:
        type: integer
    type: object
  models.GroupMemberResponse:
    properties:
      group_id:
        type: integer
      id:
        type: integer
      joined_at:
        type: integer
      role:
        type: string
      user_id:
        type: integer
    type: object
  models.GroupRequest:
    properties:
      name:
        type: string
      owner_id:
        type: integer
    type: object
  models.GroupResponse:
    properties:
      created_at:
        type: integer
      id:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
    type: object
  models.SettlementRequest:
    properties:
      amount:
        type: number
      currency:
        type: string
      from_user:
        type: integer
      to_user:
        type: integer
    required:
    - amount
    - currency
    - from_user
    - to_user
    type: object
  models.SettlementResponse:
    properties:
      amount:
        type: number
      created_at:
        type: string
      currency:
        type: string
      from_user:
        type: integer
      from_user_details:
        $ref: '#/definitions/models.UserResponse'
      id:
        type: integer
      to_user:
        type: integer
      to_user_details:
        $ref: '#/definitions/models.UserResponse'
    type: object
  models.SplitRequest:
    properties:
      expense_id:
        type: integer
      id:
        type: integer
      settled:
        type: boolean
      split_type:
        type: string
      user_id:
        type: integer
      value:
        type: number
    type: object
  models.SplitResponse:
    properties:
      expense:
        $ref: '#/definitions/models.ExpenseResponse'
      expense_id:
        type: integer
      id:
        type: integer
      settled:
        type: boolean
      split_type:
        type: string
      user:
        $ref: '#/definitions/models.UserResponse'
      user_id:
        type: integer
      value:
        type: number
    type: object
  models.UpdateAccountRequest:
    properties:
      balance:
        type: number
      currency:
        type: string
      name:
        type: string
      provider:
        type: string
      type:
        type: string
    type: object
  models.UserRequest:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  models.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  util.AccountPageResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/models.AccountResponse'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  util.AccountTypePageResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/models.AccountTypeResponse'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
info:
  contact: {}
paths:
  /account-types:
    get:
      description: List all account types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.AccountTypePageResponse'
      summary: List account types
      tags:
      - account-types
  /account-types/{id}:
    get:
      description: Get a single account type by ID
      parameters:
      - description: Account Type ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccountTypeResponse'
      summary: Get account type
      tags:
      - account-types
  /accounts:
    get:
      description: List all accounts for the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.AccountPageResponse'
      summary: List accounts
      tags:
      - accounts
    post:
      consumes:
      - application/json
      description: Create a new account for the user
      parameters:
      - description: Account info
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.CreateAccountRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AccountResponse'
      summary: Create account
      tags:
      - accounts
  /accounts/{id}:
    delete:
      description: Delete an account by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
      summary: Delete account
      tags:
      - accounts
    get:
      description: Get details of a single account by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccountResponse'
      summary: Get account
      tags:
      - accounts
    put:
      consumes:
      - application/json
      description: Update an existing account by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Account update info
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AccountResponse'
      summary: Update account
      tags:
      - accounts
  /activity:
    get:
      description: Get recent expenses and settlements
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get activity feed
      tags:
      - activity
  /expenses:
    post:
      consumes:
      - application/json
      description: Create a new expense
      parameters:
      - description: Expense object
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/models.ExpenseRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ExpenseResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new expense
      tags:
      - expenses
  /expenses/{id}:
    delete:
      description: Delete an expense from the system
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete expense by ID
      tags:
      - expenses
    get:
      description: Get details of an expense by ID
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ExpenseResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get expense by ID
      tags:
      - expenses
    put:
      consumes:
      - application/json
      description: Update an existing expense
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      - description: Expense object
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/models.ExpenseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ExpenseResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update expense by ID
      tags:
      - expenses
  /expenses/{id}/comments:
    get:
      description: Get all comments for an expense
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CommentResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get comments for expense
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: Add a comment to an expense
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment object
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.CommentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CommentResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add comment to expense
      tags:
      - comments
  /expenses/{id}/splits:
    get:
      description: Get all splits for an expense
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SplitResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get splits for expense
      tags:
      - splits
    post:
      consumes:
      - application/json
      description: Add a split to an expense
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      - description: Split object
        in: body
        name: split
        required: true
        schema:
          $ref: '#/definitions/models.SplitRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SplitResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add split to expense
      tags:
      - splits
  /groups:
    post:
      consumes:
      - application/json
      description: Create a new group
      parameters:
      - description: Group object
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/models.GroupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.GroupResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new group
      tags:
      - groups
  /groups/{id}:
    delete:
      description: Delete a group from the system
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete group by ID
      tags:
      - groups
    get:
      description: Get details of a group by ID
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GroupResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get group by ID
      tags:
      - groups
    put:
      consumes:
      - application/json
      description: Update an existing group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: Group object
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/models.GroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GroupResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update group by ID
      tags:
      - groups
  /groups/{id}/members:
    post:
      consumes:
      - application/json
      description: Add a user to a group
      parameters:
      - description: GroupMember object
        in: body
        name: member
        required: true
        schema:
          $ref: '#/definitions/models.GroupMemberRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.GroupMemberResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add member to group
      tags:
      - groups
  /groups/{id}/members/{userId}:
    delete:
      description: Remove a user from a group
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Remove member from group
      tags:
      - groups
  /reports/monthly:
    get:
      description: Get monthly spend by category
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get monthly report
      tags:
      - reports
  /reports/top-spenders:
    get:
      description: Get top spenders by total amount
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get top spenders
      tags:
      - reports
  /settlements:
    post:
      consumes:
      - application/json
      description: Create a new settlement
      parameters:
      - description: Settlement object
        in: body
        name: settlement
        required: true
        schema:
          $ref: '#/definitions/models.SettlementRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SettlementResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new settlement
      tags:
      - settlements
  /settlements/{id}:
    get:
      description: Get details of a settlement by ID
      parameters:
      - description: Settlement ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SettlementResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get settlement by ID
      tags:
      - settlements
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user in the system
      parameters:
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete a user from the system
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete user by ID
      tags:
      - users
    get:
      description: Get details of a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user by ID
      tags:
      - users
swagger: "2.0"
