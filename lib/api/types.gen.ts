// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'localhost:8080/api/' | (string & {});
};

export type ModelsAccountResponse = {
    balance?: number;
    created_at?: string;
    currency?: ModelsCurrencyResponse;
    id?: number;
    name?: string;
    provider?: string;
    type?: ModelsAccountTypeResponse;
    type_id?: number;
    updated_at?: string;
    user_id?: number;
};

export type ModelsAccountTypeResponse = {
    id?: number;
    name?: string;
};

export type ModelsCommentRequest = {
    body?: string;
    created_at?: string;
    expense_id?: number;
    user_id?: number;
};

export type ModelsCommentResponse = {
    body?: string;
    created_at?: string;
    expense?: ModelsUserResponse;
    expense_id?: number;
    id?: number;
    user?: ModelsUserResponse;
    user_id?: number;
};

export type ModelsCreateAccountRequest = {
    balance?: number;
    currency?: number;
    name: string;
    provider?: string;
    type_id: number;
};

export type ModelsCurrencyResponse = {
    code?: string;
    decimal_places?: number;
    id?: number;
    name?: string;
    symbol?: string;
};

export type ModelsExpenseRequest = {
    created_by?: number;
    currency?: string;
    date?: string;
    description?: string;
    group_id?: number;
    id?: number;
    is_recurring?: boolean;
    total_amount?: number;
};

export type ModelsExpenseResponse = {
    created_at?: string;
    created_by?: number;
    currency?: string;
    date?: string;
    description?: string;
    group?: ModelsGroupResponse;
    group_id?: number;
    id?: number;
    is_recurring?: boolean;
    total_amount?: number;
    user?: ModelsUserResponse;
};

export type ModelsGroupMemberRequest = {
    group_id?: number;
    role?: string;
    user_id?: number;
};

export type ModelsGroupMemberResponse = {
    group_id?: number;
    id?: number;
    joined_at?: number;
    role?: string;
    user_id?: number;
};

export type ModelsGroupRequest = {
    name?: string;
    owner_id?: number;
};

export type ModelsGroupResponse = {
    created_at?: number;
    id?: number;
    name?: string;
    owner_id?: number;
};

export type ModelsSettlementRequest = {
    amount: number;
    currency: string;
    from_user: number;
    to_user: number;
};

export type ModelsSettlementResponse = {
    amount?: number;
    created_at?: string;
    currency?: string;
    from_user?: number;
    from_user_details?: ModelsUserResponse;
    id?: number;
    to_user?: number;
    to_user_details?: ModelsUserResponse;
};

export type ModelsSplitRequest = {
    expense_id?: number;
    id?: number;
    settled?: boolean;
    split_type?: string;
    user_id?: number;
    value?: number;
};

export type ModelsSplitResponse = {
    expense?: ModelsExpenseResponse;
    expense_id?: number;
    id?: number;
    settled?: boolean;
    split_type?: string;
    user?: ModelsUserResponse;
    user_id?: number;
    value?: number;
};

export type ModelsUpdateAccountRequest = {
    balance?: number;
    currency?: number;
    name?: string;
    provider?: string;
    type_id?: number;
};

export type ModelsUserRequest = {
    email?: string;
    name?: string;
};

export type ModelsUserResponse = {
    created_at?: string;
    email?: string;
    id?: number;
    name?: string;
    updated_at?: string;
};

export type UtilAccountPageResponse = {
    items?: Array<ModelsAccountResponse>;
    page?: number;
    size?: number;
    total?: number;
};

export type UtilAccountTypePageResponse = {
    items?: Array<ModelsAccountTypeResponse>;
    page?: number;
    size?: number;
    total?: number;
};

export type UtilCurrencyPageResponse = {
    items?: Array<ModelsCurrencyResponse>;
    page?: number;
    size?: number;
    total?: number;
};

export type GetAccountTypesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/account-types';
};

export type GetAccountTypesResponses = {
    /**
     * OK
     */
    200: UtilCurrencyPageResponse;
};

export type GetAccountTypesResponse = GetAccountTypesResponses[keyof GetAccountTypesResponses];

export type GetAccountTypesByIdData = {
    body?: never;
    path: {
        /**
         * Currency ID
         */
        id: number;
    };
    query?: never;
    url: '/account-types/{id}';
};

export type GetAccountTypesByIdResponses = {
    /**
     * OK
     */
    200: ModelsCurrencyResponse;
};

export type GetAccountTypesByIdResponse = GetAccountTypesByIdResponses[keyof GetAccountTypesByIdResponses];

export type GetAccountsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/accounts';
};

export type GetAccountsResponses = {
    /**
     * OK
     */
    200: UtilAccountPageResponse;
};

export type GetAccountsResponse = GetAccountsResponses[keyof GetAccountsResponses];

export type PostAccountsData = {
    /**
     * Account info
     */
    body: ModelsCreateAccountRequest;
    path?: never;
    query?: never;
    url: '/accounts';
};

export type PostAccountsResponses = {
    /**
     * Created
     */
    201: ModelsAccountResponse;
};

export type PostAccountsResponse = PostAccountsResponses[keyof PostAccountsResponses];

export type DeleteAccountsByIdData = {
    body?: never;
    path: {
        /**
         * Account ID
         */
        id: number;
    };
    query?: never;
    url: '/accounts/{id}';
};

export type DeleteAccountsByIdResponses = {
    /**
     * No Content
     */
    204: string;
};

export type DeleteAccountsByIdResponse = DeleteAccountsByIdResponses[keyof DeleteAccountsByIdResponses];

export type GetAccountsByIdData = {
    body?: never;
    path: {
        /**
         * Account ID
         */
        id: number;
    };
    query?: never;
    url: '/accounts/{id}';
};

export type GetAccountsByIdResponses = {
    /**
     * OK
     */
    200: ModelsAccountResponse;
};

export type GetAccountsByIdResponse = GetAccountsByIdResponses[keyof GetAccountsByIdResponses];

export type PutAccountsByIdData = {
    /**
     * Account update info
     */
    body: ModelsUpdateAccountRequest;
    path: {
        /**
         * Account ID
         */
        id: number;
    };
    query?: never;
    url: '/accounts/{id}';
};

export type PutAccountsByIdResponses = {
    /**
     * OK
     */
    200: ModelsAccountResponse;
};

export type PutAccountsByIdResponse = PutAccountsByIdResponses[keyof PutAccountsByIdResponses];

export type GetActivityData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/activity';
};

export type GetActivityErrors = {
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type GetActivityError = GetActivityErrors[keyof GetActivityErrors];

export type GetActivityResponses = {
    /**
     * OK
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type GetActivityResponse = GetActivityResponses[keyof GetActivityResponses];

export type PostExpensesData = {
    /**
     * Expense object
     */
    body: ModelsExpenseRequest;
    path?: never;
    query?: never;
    url: '/expenses';
};

export type PostExpensesErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type PostExpensesError = PostExpensesErrors[keyof PostExpensesErrors];

export type PostExpensesResponses = {
    /**
     * Created
     */
    201: ModelsExpenseResponse;
};

export type PostExpensesResponse = PostExpensesResponses[keyof PostExpensesResponses];

export type DeleteExpensesByIdData = {
    body?: never;
    path: {
        /**
         * Expense ID
         */
        id: number;
    };
    query?: never;
    url: '/expenses/{id}';
};

export type DeleteExpensesByIdErrors = {
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type DeleteExpensesByIdError = DeleteExpensesByIdErrors[keyof DeleteExpensesByIdErrors];

export type DeleteExpensesByIdResponses = {
    /**
     * OK
     */
    200: {
        [key: string]: string;
    };
};

export type DeleteExpensesByIdResponse = DeleteExpensesByIdResponses[keyof DeleteExpensesByIdResponses];

export type GetExpensesByIdData = {
    body?: never;
    path: {
        /**
         * Expense ID
         */
        id: number;
    };
    query?: never;
    url: '/expenses/{id}';
};

export type GetExpensesByIdErrors = {
    /**
     * Not Found
     */
    404: {
        [key: string]: string;
    };
};

export type GetExpensesByIdError = GetExpensesByIdErrors[keyof GetExpensesByIdErrors];

export type GetExpensesByIdResponses = {
    /**
     * OK
     */
    200: ModelsExpenseResponse;
};

export type GetExpensesByIdResponse = GetExpensesByIdResponses[keyof GetExpensesByIdResponses];

export type PutExpensesByIdData = {
    /**
     * Expense object
     */
    body: ModelsExpenseRequest;
    path: {
        /**
         * Expense ID
         */
        id: number;
    };
    query?: never;
    url: '/expenses/{id}';
};

export type PutExpensesByIdErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Not Found
     */
    404: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type PutExpensesByIdError = PutExpensesByIdErrors[keyof PutExpensesByIdErrors];

export type PutExpensesByIdResponses = {
    /**
     * OK
     */
    200: ModelsExpenseResponse;
};

export type PutExpensesByIdResponse = PutExpensesByIdResponses[keyof PutExpensesByIdResponses];

export type GetExpensesByIdCommentsData = {
    body?: never;
    path: {
        /**
         * Expense ID
         */
        id: number;
    };
    query?: never;
    url: '/expenses/{id}/comments';
};

export type GetExpensesByIdCommentsErrors = {
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type GetExpensesByIdCommentsError = GetExpensesByIdCommentsErrors[keyof GetExpensesByIdCommentsErrors];

export type GetExpensesByIdCommentsResponses = {
    /**
     * OK
     */
    200: Array<ModelsCommentResponse>;
};

export type GetExpensesByIdCommentsResponse = GetExpensesByIdCommentsResponses[keyof GetExpensesByIdCommentsResponses];

export type PostExpensesByIdCommentsData = {
    /**
     * Comment object
     */
    body: ModelsCommentRequest;
    path: {
        /**
         * Expense ID
         */
        id: number;
    };
    query?: never;
    url: '/expenses/{id}/comments';
};

export type PostExpensesByIdCommentsErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type PostExpensesByIdCommentsError = PostExpensesByIdCommentsErrors[keyof PostExpensesByIdCommentsErrors];

export type PostExpensesByIdCommentsResponses = {
    /**
     * Created
     */
    201: ModelsCommentResponse;
};

export type PostExpensesByIdCommentsResponse = PostExpensesByIdCommentsResponses[keyof PostExpensesByIdCommentsResponses];

export type GetExpensesByIdSplitsData = {
    body?: never;
    path: {
        /**
         * Expense ID
         */
        id: number;
    };
    query?: never;
    url: '/expenses/{id}/splits';
};

export type GetExpensesByIdSplitsErrors = {
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type GetExpensesByIdSplitsError = GetExpensesByIdSplitsErrors[keyof GetExpensesByIdSplitsErrors];

export type GetExpensesByIdSplitsResponses = {
    /**
     * OK
     */
    200: Array<ModelsSplitResponse>;
};

export type GetExpensesByIdSplitsResponse = GetExpensesByIdSplitsResponses[keyof GetExpensesByIdSplitsResponses];

export type PostExpensesByIdSplitsData = {
    /**
     * Split object
     */
    body: ModelsSplitRequest;
    path: {
        /**
         * Expense ID
         */
        id: number;
    };
    query?: never;
    url: '/expenses/{id}/splits';
};

export type PostExpensesByIdSplitsErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type PostExpensesByIdSplitsError = PostExpensesByIdSplitsErrors[keyof PostExpensesByIdSplitsErrors];

export type PostExpensesByIdSplitsResponses = {
    /**
     * Created
     */
    201: ModelsSplitResponse;
};

export type PostExpensesByIdSplitsResponse = PostExpensesByIdSplitsResponses[keyof PostExpensesByIdSplitsResponses];

export type PostGroupsData = {
    /**
     * Group object
     */
    body: ModelsGroupRequest;
    path?: never;
    query?: never;
    url: '/groups';
};

export type PostGroupsErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type PostGroupsError = PostGroupsErrors[keyof PostGroupsErrors];

export type PostGroupsResponses = {
    /**
     * Created
     */
    201: ModelsGroupResponse;
};

export type PostGroupsResponse = PostGroupsResponses[keyof PostGroupsResponses];

export type DeleteGroupsByIdData = {
    body?: never;
    path: {
        /**
         * Group ID
         */
        id: number;
    };
    query?: never;
    url: '/groups/{id}';
};

export type DeleteGroupsByIdErrors = {
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type DeleteGroupsByIdError = DeleteGroupsByIdErrors[keyof DeleteGroupsByIdErrors];

export type DeleteGroupsByIdResponses = {
    /**
     * OK
     */
    200: {
        [key: string]: string;
    };
};

export type DeleteGroupsByIdResponse = DeleteGroupsByIdResponses[keyof DeleteGroupsByIdResponses];

export type GetGroupsByIdData = {
    body?: never;
    path: {
        /**
         * Group ID
         */
        id: number;
    };
    query?: never;
    url: '/groups/{id}';
};

export type GetGroupsByIdErrors = {
    /**
     * Not Found
     */
    404: {
        [key: string]: string;
    };
};

export type GetGroupsByIdError = GetGroupsByIdErrors[keyof GetGroupsByIdErrors];

export type GetGroupsByIdResponses = {
    /**
     * OK
     */
    200: ModelsGroupResponse;
};

export type GetGroupsByIdResponse = GetGroupsByIdResponses[keyof GetGroupsByIdResponses];

export type PutGroupsByIdData = {
    /**
     * Group object
     */
    body: ModelsGroupRequest;
    path: {
        /**
         * Group ID
         */
        id: number;
    };
    query?: never;
    url: '/groups/{id}';
};

export type PutGroupsByIdErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Not Found
     */
    404: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type PutGroupsByIdError = PutGroupsByIdErrors[keyof PutGroupsByIdErrors];

export type PutGroupsByIdResponses = {
    /**
     * OK
     */
    200: ModelsGroupResponse;
};

export type PutGroupsByIdResponse = PutGroupsByIdResponses[keyof PutGroupsByIdResponses];

export type PostGroupsByIdMembersData = {
    /**
     * GroupMember object
     */
    body: ModelsGroupMemberRequest;
    path: {
        /**
         * Group ID
         */
        id: number;
    };
    query?: never;
    url: '/groups/{id}/members';
};

export type PostGroupsByIdMembersErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type PostGroupsByIdMembersError = PostGroupsByIdMembersErrors[keyof PostGroupsByIdMembersErrors];

export type PostGroupsByIdMembersResponses = {
    /**
     * Created
     */
    201: ModelsGroupMemberResponse;
};

export type PostGroupsByIdMembersResponse = PostGroupsByIdMembersResponses[keyof PostGroupsByIdMembersResponses];

export type DeleteGroupsByIdMembersByUserIdData = {
    body?: never;
    path: {
        /**
         * Group ID
         */
        id: number;
        /**
         * User ID
         */
        userId: number;
    };
    query?: never;
    url: '/groups/{id}/members/{userId}';
};

export type DeleteGroupsByIdMembersByUserIdErrors = {
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type DeleteGroupsByIdMembersByUserIdError = DeleteGroupsByIdMembersByUserIdErrors[keyof DeleteGroupsByIdMembersByUserIdErrors];

export type DeleteGroupsByIdMembersByUserIdResponses = {
    /**
     * OK
     */
    200: {
        [key: string]: string;
    };
};

export type DeleteGroupsByIdMembersByUserIdResponse = DeleteGroupsByIdMembersByUserIdResponses[keyof DeleteGroupsByIdMembersByUserIdResponses];

export type GetReportsMonthlyData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/reports/monthly';
};

export type GetReportsMonthlyErrors = {
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type GetReportsMonthlyError = GetReportsMonthlyErrors[keyof GetReportsMonthlyErrors];

export type GetReportsMonthlyResponses = {
    /**
     * OK
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type GetReportsMonthlyResponse = GetReportsMonthlyResponses[keyof GetReportsMonthlyResponses];

export type GetReportsTopSpendersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/reports/top-spenders';
};

export type GetReportsTopSpendersErrors = {
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type GetReportsTopSpendersError = GetReportsTopSpendersErrors[keyof GetReportsTopSpendersErrors];

export type GetReportsTopSpendersResponses = {
    /**
     * OK
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type GetReportsTopSpendersResponse = GetReportsTopSpendersResponses[keyof GetReportsTopSpendersResponses];

export type PostSettlementsData = {
    /**
     * Settlement object
     */
    body: ModelsSettlementRequest;
    path?: never;
    query?: never;
    url: '/settlements';
};

export type PostSettlementsErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type PostSettlementsError = PostSettlementsErrors[keyof PostSettlementsErrors];

export type PostSettlementsResponses = {
    /**
     * Created
     */
    201: ModelsSettlementResponse;
};

export type PostSettlementsResponse = PostSettlementsResponses[keyof PostSettlementsResponses];

export type GetSettlementsByIdData = {
    body?: never;
    path: {
        /**
         * Settlement ID
         */
        id: number;
    };
    query?: never;
    url: '/settlements/{id}';
};

export type GetSettlementsByIdErrors = {
    /**
     * Not Found
     */
    404: {
        [key: string]: string;
    };
};

export type GetSettlementsByIdError = GetSettlementsByIdErrors[keyof GetSettlementsByIdErrors];

export type GetSettlementsByIdResponses = {
    /**
     * OK
     */
    200: ModelsSettlementResponse;
};

export type GetSettlementsByIdResponse = GetSettlementsByIdResponses[keyof GetSettlementsByIdResponses];

export type PostUsersData = {
    /**
     * Create User
     */
    body: ModelsUserRequest;
    path?: never;
    query?: never;
    url: '/users';
};

export type PostUsersErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type PostUsersError = PostUsersErrors[keyof PostUsersErrors];

export type PostUsersResponses = {
    /**
     * Created
     */
    201: ModelsUserResponse;
};

export type PostUsersResponse = PostUsersResponses[keyof PostUsersResponses];

export type DeleteUsersByIdData = {
    body?: never;
    path: {
        /**
         * User ID
         */
        id: number;
    };
    query?: never;
    url: '/users/{id}';
};

export type DeleteUsersByIdErrors = {
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type DeleteUsersByIdError = DeleteUsersByIdErrors[keyof DeleteUsersByIdErrors];

export type DeleteUsersByIdResponses = {
    /**
     * OK
     */
    200: {
        [key: string]: string;
    };
};

export type DeleteUsersByIdResponse = DeleteUsersByIdResponses[keyof DeleteUsersByIdResponses];

export type GetUsersByIdData = {
    body?: never;
    path: {
        /**
         * User ID
         */
        id: number;
    };
    query?: never;
    url: '/users/{id}';
};

export type GetUsersByIdErrors = {
    /**
     * Not Found
     */
    404: {
        [key: string]: string;
    };
};

export type GetUsersByIdError = GetUsersByIdErrors[keyof GetUsersByIdErrors];

export type GetUsersByIdResponses = {
    /**
     * OK
     */
    200: ModelsUserResponse;
};

export type GetUsersByIdResponse = GetUsersByIdResponses[keyof GetUsersByIdResponses];

export type PutUsersByIdData = {
    /**
     * User object
     */
    body: ModelsUserRequest;
    path: {
        /**
         * User ID
         */
        id: number;
    };
    query?: never;
    url: '/users/{id}';
};

export type PutUsersByIdErrors = {
    /**
     * Bad Request
     */
    400: {
        [key: string]: string;
    };
    /**
     * Not Found
     */
    404: {
        [key: string]: string;
    };
    /**
     * Internal Server Error
     */
    500: {
        [key: string]: string;
    };
};

export type PutUsersByIdError = PutUsersByIdErrors[keyof PutUsersByIdErrors];

export type PutUsersByIdResponses = {
    /**
     * OK
     */
    200: ModelsUserResponse;
};

export type PutUsersByIdResponse = PutUsersByIdResponses[keyof PutUsersByIdResponses];
